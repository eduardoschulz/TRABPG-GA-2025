cmake_minimum_required(VERSION 3.11...4.0)
project(FCG2025-1)

# Define o padr√£o do C++
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Ativa o FetchContent
include(FetchContent)

# Baixa GLFW automaticamente
FetchContent_Declare(
  glfw
  GIT_REPOSITORY https://github.com/glfw/glfw.git
  GIT_TAG master
)

FetchContent_MakeAvailable(glfw)

FetchContent_Declare(
  stb_image
  GIT_REPOSITORY https://github.com/nothings/stb.git
  GIT_TAG master
)
FetchContent_MakeAvailable(stb_image)
include_directories(${stb_image_SOURCE_DIR})


# Baixa GLM automaticamente
FetchContent_Declare(
  glm
  GIT_REPOSITORY https://github.com/g-truc/glm.git
  GIT_TAG 1.0.1
)
FetchContent_MakeAvailable(glm)

# Baixa stb_image automaticamente
FetchContent_Declare(
  stb_image
  GIT_REPOSITORY https://github.com/nothings/stb.git
  GIT_TAG master
)
FetchContent_MakeAvailable(stb_image)

# Pastas de includes
include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(${CMAKE_SOURCE_DIR}/common)
include_directories(${CMAKE_SOURCE_DIR}/include/glad)
include_directories(${glm_SOURCE_DIR})
include_directories(${stb_image_SOURCE_DIR})

# üëâ Inclui o caminho correto para o glut.h local:
# include/glut/include/GL/glut.h
include_directories(${CMAKE_SOURCE_DIR}/include/glut/include/GL)


# Se necess√°rio, adicione tamb√©m a pasta de libs do GLUT
# Ex: include/glut/lib/libglut.a ou glut32.lib
link_directories(${CMAKE_SOURCE_DIR}/include/glut/lib)

# Exerc√≠cios/fontes do projeto
set(EXERCISES
    Game/main
    HelloSprites/HelloSprites  # S√≥ um alvo agora: HelloSprites
)

add_compile_options(-Wno-pragmas)

# Detecta bibliotecas do OpenGL por SO
if(WIN32)
    set(OPENGL_LIBS opengl32)
elseif(APPLE)
    find_library(OpenGL_LIBRARY OpenGL)
    set(OPENGL_LIBS ${OpenGL_LIBRARY})
else()
    find_package(OpenGL REQUIRED)
    set(OPENGL_LIBS ${OPENGL_gl_LIBRARY})
endif()

# Verifica se glad.c est√° presente
set(GLAD_C_FILE "${CMAKE_SOURCE_DIR}/common/glad.c")
if (NOT EXISTS ${GLAD_C_FILE})
    message(FATAL_ERROR "Arquivo glad.c n√£o encontrado! Baixe a GLAD manualmente em https://glad.dav1d.de/ e coloque glad.h em include/glad/ e glad.c em common/")
endif()

# Gera os execut√°veis
foreach(EXERCISE ${EXERCISES})
    get_filename_component(EXE_NAME ${EXERCISE} NAME)

    # Para HelloSprites, adicione explicitamente Sprite.cpp + glad.c
    if(EXE_NAME STREQUAL "HelloSprites")
        add_executable(${EXE_NAME}
            src/${EXERCISE}.cpp          # HelloSprites.cpp
            src/HelloSprites/Sprite.cpp  # <-- Implementa√ß√£o da classe!
            ${GLAD_C_FILE}               # GLAD
        )
    else()
        add_executable(${EXE_NAME} src/${EXERCISE}.cpp ${GLAD_C_FILE})
    endif()

    target_include_directories(${EXE_NAME} PRIVATE 
        ${CMAKE_SOURCE_DIR}/include
        ${CMAKE_SOURCE_DIR}/include/glad
        ${CMAKE_SOURCE_DIR}/include/glut/include/GL  # Se precisar do GLUT
        ${glm_SOURCE_DIR}
        ${stb_image_SOURCE_DIR}
    )

    target_link_libraries(${EXE_NAME}
        glfw
        ${OPENGL_LIBS}
        glm::glm
        # Descomente se precisar: glut  # Para Windows/Linux
    )
endforeach()
