cmake_minimum_required(VERSION 3.11...4.0)
project(FCG2025-1)


set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)


include(FetchContent)


FetchContent_Declare(
  glfw
  GIT_REPOSITORY https://github.com/glfw/glfw.git
  GIT_TAG master
)
FetchContent_MakeAvailable(glfw)


FetchContent_Declare(
  glm
  GIT_REPOSITORY https://github.com/g-truc/glm.git
  GIT_TAG 1.0.1
)
FetchContent_MakeAvailable(glm)


FetchContent_Declare(
  stb_image
  GIT_REPOSITORY https://github.com/nothings/stb.git
  GIT_TAG master
)
FetchContent_MakeAvailable(stb_image)
include_directories(${stb_image_SOURCE_DIR})

include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(${CMAKE_SOURCE_DIR}/common)
include_directories(${CMAKE_SOURCE_DIR}/include/glad)
include_directories(${CMAKE_SOURCE_DIR}/include/glut/include/GL)
include_directories(${glm_SOURCE_DIR})
include_directories(${stb_image_SOURCE_DIR})


link_directories(${CMAKE_SOURCE_DIR}/include/glut/lib)


add_compile_options(-Wno-pragmas)


set(GLAD_C_FILE "${CMAKE_SOURCE_DIR}/common/glad.c")
if (NOT EXISTS ${GLAD_C_FILE})
    message(FATAL_ERROR "Arquivo glad.c n√£o encontrado! 
Baixe manualmente em https://glad.dav1d.de/ 
e coloque glad.h em include/glad/ e glad.c em common/")
endif()


if(WIN32)
    set(OPENGL_LIBS opengl32)
elseif(APPLE)
    find_library(OpenGL_LIBRARY OpenGL)
    set(OPENGL_LIBS ${OpenGL_LIBRARY})
else()
    find_package(OpenGL REQUIRED)
    set(OPENGL_LIBS ${OPENGL_gl_LIBRARY})
endif()


add_executable(Base
    src/Base/HelloSprites.cpp
    src/Base/Sprite.cpp
    ${GLAD_C_FILE}
)
target_include_directories(Base PRIVATE
    ${CMAKE_SOURCE_DIR}/src
    ${CMAKE_SOURCE_DIR}/include
    ${glm_SOURCE_DIR}
    ${stb_image_SOURCE_DIR}
)
target_link_libraries(Base
    glfw
    ${OPENGL_LIBS}
    glm::glm
)